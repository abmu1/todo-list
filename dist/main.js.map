{"version":3,"file":"main.js","mappings":"mBAAA,MAAMA,EAAU,CAAEC,EAAQ,MACxB,IAAIC,EAiBJ,MAAO,CAACD,QAAMC,cAAYC,QAhBTC,IACfH,EAAMI,KAAKD,EAAK,EAegBE,WAbdC,IAClB,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAC5BP,EAAMO,GAAGD,OAASA,GACpBN,EAAMS,OAAOF,EAAG,EAEnB,EAQ0CG,SAN3BP,IAChBF,EAAcE,GAKsCQ,MAHxC,IACLX,EAAMQ,OAE6C,EAGxDI,EAAiB,CAACN,EAAMO,EAAQ,MAc7B,CAACP,OAAKO,QAAMC,QAbFC,IACfF,EAAMT,KAAKW,EAAK,EAYSC,WAVPV,IAClB,IAAK,IAAIC,EAAI,EAAGA,EAAIM,EAAML,OAAQD,IAC5BM,EAAMN,GAAGD,OAASA,GACpBO,EAAMJ,OAAOF,EAAG,EAEnB,EAKmCI,MAHxB,IACLE,EAAML,SAKXS,EAAc,CAACX,EAAMY,EAASC,KAClC,IAAIC,EAAc,GACdC,GAAS,EAOb,MAAO,CAACf,OAAKY,UAAQG,SAAOF,WAASC,cAAYE,WAH7BC,IAClBF,EAASE,CAAI,EAE6CC,eANpCC,IACtBL,EAAcK,CAAC,EAK0D,EC5C7E,SAASC,EAAYC,GACnBC,aAAaC,QAAQ,UAAWC,KAAKC,UAAUJ,GACjD,CC8CA,SAASK,EAAWC,EAASN,GAC3B,IAAKM,EAAS,OACLC,SAASC,eAAe,mBAC9BC,UAAYH,EAAQ3B,KACvB,MAAM+B,EAAKH,SAASC,eAAe,SACnCE,EAAGC,UAAY,GACfL,EAAQpB,MAAM0B,SAAQxB,IACpB,MAAMyB,EAAKN,SAASO,cAAc,MAC5BC,EAAaR,SAASO,cAAc,UACpCE,EAAQT,SAASO,cAAc,KAC/BG,EAAQV,SAASO,cAAc,KAC/BI,EAAeX,SAASO,cAAc,UAC5CD,EAAGM,UAAUC,IAAI,OAAQhC,EAAKI,UAC9BuB,EAAWI,UAAUC,IAAI,QACzBJ,EAAMG,UAAUC,IAAI,aACpBH,EAAME,UAAUC,IAAI,QACpBF,EAAaC,UAAUC,IAAI,SAAU,eACrCF,EAAaP,UAAY,SACzBO,EAAaG,iBAAiB,QAsBlC,SAAoBf,EAASN,GAC3B,OAAO,SAAUsB,GACf,MAAMlC,EAAOkC,EAAEC,OAAOC,cACtBlB,EAAQjB,WAAWD,EAAKqC,QAAQ9C,MAChCS,EAAKsC,SACL3B,EAAYC,EACd,CACF,CA7B2CX,CAAWiB,EAASN,IAC3DgB,EAAMW,YAAcvC,EAAKT,KACzBsC,EAAMU,YAAcvC,EAAKG,QACzBwB,EAAWM,iBAAiB,SAAS,KACnC,GAAIjC,EAAKM,OAIP,OAHAN,EAAKM,QAAS,EACdmB,EAAGM,UAAUO,OAAO,kBACpB3B,EAAYC,GAGdZ,EAAKM,QAAS,EACdmB,EAAGM,UAAUC,IAAI,YAAY,IAE3BhC,EAAKM,QACPmB,EAAGM,UAAUC,IAAI,aAEnBP,EAAGe,OAAOb,EAAWC,EAAMC,EAAMC,GACjCL,EAAGY,QAAQ9C,KAAOS,EAAKT,KACvB+B,EAAGkB,OAAOf,EAAG,GAEjB,CCxCA,SAASgB,EAAc7B,EAASM,GAC9B,MAAMI,EAAKH,SAASC,eAAe,YAC7BK,EAAKN,SAASO,cAAc,MAC5BgB,EAAIvB,SAASO,cAAc,KAC3BiB,EAASxB,SAASO,cAAc,UACtCD,EAAGM,UAAUC,IAAI,WACjBP,EAAGY,QAAQ9C,KAAO2B,EAAQ3B,KAC1BkC,EAAGQ,iBAAiB,SAAS,KAC3BrB,EAAQ1B,YAAcgC,EACtBD,EAAWC,GACX,MAAM0B,EAAUzB,SAAS0B,cAAc,YACvCD,GAASb,UAAUO,OAAO,WAC1Bb,EAAGM,UAAUC,IAAI,UAAU,IAE7BU,EAAEX,UAAUC,IAAI,gBAChBU,EAAEH,YAAcrB,EAAQ3B,KACxBoD,EAAOZ,UAAUC,IAAI,SAAU,kBAC/BW,EAAOpB,UAAY,SACnBoB,EAAOV,iBAAiB,QAM1B,SAAuBrB,EAASM,GAC9B,OAAO,SAAuBgB,GAC5BA,EAAEY,kBACF,MACMC,EADSb,EAAEC,OACKC,cAChBY,EAAWD,EAAOV,QAAQ9C,KAChCqB,EAAQtB,WAAW0D,GACnBD,EAAOT,SACH1B,EAAQ1B,cAAgBgC,GAC1BD,EAAWL,EAAQ3B,MAAM,GAAI2B,GAG/BD,EAAYC,EACd,CACF,CApBkCqC,CAAcrC,EAASM,IACvDO,EAAGe,OAAOE,EAAEC,GACZrB,EAAGkB,OAAOf,EACZ,CCjEAd,EAAY3B,KACZ,MAAM4B,EHAN,WAEE,MAAM3B,EADQ8B,KAAKmC,MAAMrC,aAAasC,QAAQ,YACxBlE,MAAMmE,KAAIhE,IAC9B,IAAIU,EAAQV,EAAKU,MAAMsD,KAAIpD,IACzB,IAAI,KAAET,EAAI,QAAEY,EAAO,SAAEC,GAAaJ,EAClC,OAAOE,EAAYX,EAAMY,EAASC,EAAS,IAE7C,OAAOP,EAAeT,EAAKG,KAAMO,EAAM,IAEzC,OAAOd,EAAQC,EACjB,CGVgBoE,IAAgBrE,IAEhCsE,QAAQC,IAAI,SAEZ,MAAMC,EAAiB3D,EAAe,WACtCe,EAAQzB,QAAQqE,GAChB5C,EAAQ1B,YAAcsE,EDRDrC,SAASC,eAAe,eAChCa,iBAAiB,SAAUC,IACpCA,EAAEY,kBACF,MAAMW,EAAetC,SAASC,eAAe,iBAC7CqC,EAAa1B,UAAUC,IAAI,iBAC3ByB,EAAa1B,UAAUO,OAAO,UACXnB,SAASC,eAAe,iBAChCsC,OAAO,IAIJvC,SAASC,eAAe,WAChCa,iBAAiB,SAAS,KAChC,MAAMwB,EAAetC,SAASC,eAAe,iBAC7CqC,EAAa1B,UAAUO,OAAO,iBAC9BmB,EAAa1B,UAAUC,IAAI,SAAS,IAIxC,SAAgCpB,EAAQf,GACtC,MAAM4D,EAAetC,SAASC,eAAe,iBAC7CqC,EAAaxB,iBAAiB,UAAWC,IACvCA,EAAEyB,iBACF,MAAMC,EAAazC,SAASC,eAAe,iBACrCyC,EAAeD,EAAWE,MAChC,IAAK,IAAItE,EAAI,EAAGA,EAAIoB,EAAQ3B,MAAMQ,OAAQD,IACxC,GAAIqE,IAAiBjD,EAAQ3B,MAAMO,GAAGD,KAIpC,OAHAqE,EAAWG,kBAAkB,8CAC7BH,EAAWI,sBACXJ,EAAWG,kBAAkB,IAIjC,MAAM7C,EAAUrB,EAAegE,GAC/BjD,EAAQzB,QAAQ+B,GAChBuB,EAAc7B,EAASM,GACvB0C,EAAWE,MAAQ,GACnBL,EAAaQ,QACG9C,SAASC,eAAe,WAChC8C,QAERvD,EAAYC,EAAQ,GAExB,CChCA,CAAiCA,EAASf,GFZxBsB,SAASC,eAAe,YAChCa,iBAAiB,SAAUC,IACjCA,EAAEY,kBACF,MAAMqB,EAAWhD,SAASC,eAAe,cACzC+C,EAASpC,UAAUC,IAAI,cACvBmC,EAASpC,UAAUO,OAAO,UACTnB,SAASC,eAAe,aAChCsC,OAAO,IAIFvC,SAASC,eAAe,WAChCa,iBAAiB,SAAS,KAChC,MAAMkC,EAAWhD,SAASC,eAAe,cACzC+C,EAASpC,UAAUO,OAAO,cAC1B6B,EAASpC,UAAUC,IAAI,SAAS,IAIpC,SAA0BpB,EAAQV,GAChC,MAAMiE,EAAWhD,SAASC,eAAe,cACzC+C,EAASlC,iBAAiB,UAAWC,IACnCA,EAAEyB,iBACF,MAAMS,EAAWjD,SAASC,eAAe,aACzC,IAAK,IAAI5B,EAAI,EAAGA,EAAIoB,EAAQ1B,YAAYY,MAAML,OAAQD,IACpD,GAAI4E,EAASN,QAAUlD,EAAQ1B,YAAYY,MAAMN,GAAGD,KAIlD,OAHA6E,EAASL,kBAAkB,2CAC3BK,EAASJ,sBACTI,EAASL,kBAAkB,IAI/B,MAAM5D,EAAUgB,SAASC,eAAe,YAClChB,EAAWe,SAASC,eAAe,YACnCpB,EAAOE,EAAYkE,EAASN,MAAM3D,EAAQ2D,MAAM1D,EAAS0D,OAC/DM,EAASN,MAAQ,GACjB3D,EAAQ2D,MAAQ,GAChB,MAAMO,EAAKzD,EAAQ1B,YACnBmF,EAAGtE,QAAQC,GACXiB,EAAWoD,GACXF,EAASF,QACO9C,SAASC,eAAe,WAChC8C,QAERvD,EAAYC,EAAQ,GAExB,CE/BA,CAAwBA,EAASV,GACjCU,EAAQ3B,MAAMuC,SAAQN,IACpB,EAAwBN,EAASM,EAAQ,IAE3C,EAAkBsC,EAAgB5C,GAClCO,SAASC,eAAe,YAAYkD,WAAWJ,QAE/C/C,SAASc,iBAAiB,SAAUsC,IAClC,MAAMJ,EAAWhD,SAASC,eAAe,cACnCqC,EAAetC,SAASC,eAAe,iBACxC+C,EAASK,SAASD,EAAMpC,SAAagC,EAASpC,UAAUyC,SAAS,WACpEL,EAASpC,UAAUC,IAAI,UAEpByB,EAAae,SAASD,EAAMpC,SAC/BsB,EAAa1B,UAAUC,IAAI,SAC7B,G","sources":["webpack://todo/./src/factories.js","webpack://todo/./src/localStorage.js","webpack://todo/./src/task.js","webpack://todo/./src/project.js","webpack://todo/./src/index.js"],"sourcesContent":["const library = ( todos = []) => {\n  let currentTodo;\n  const addTodo = (todo) => {\n    todos.push(todo);\n  };\n  const removeTodo = (name) => {\n    for (let i = 0; i < todos.length; i++) {\n      if (todos[i].name === name) {\n        todos.splice(i, 1);\n      };\n    };\n  };\n  const updateCT = (todo) => {\n    currentTodo = todo\n  };\n  const index = () => {\n    return todos.length;\n  };\n  return {todos,currentTodo,addTodo,removeTodo,updateCT,index};\n};\n\nconst projectFactory = (name, tasks = []) => {\n  const addTask = (task) => {\n    tasks.push(task);\n  };\n  const removeTask = (name) => {\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].name === name) {\n        tasks.splice(i, 1);\n      };\n    };\n  };\n  const index = () => {\n    return tasks.length;\n  };\n  return {name,tasks,addTask,removeTask,index};\n};\n\nconst taskFactory = (name, dueDate, priority) => {\n  let description = '';\n  let isDone = false;\n  const addDescription = (d) => {\n    description = d;\n  };\n  const updateDone = (done) => {\n    isDone = done;\n  };\n  return {name,dueDate,isDone,priority,description,updateDone,addDescription};\n};\n\nexport{library,projectFactory,taskFactory};","import { projectFactory, taskFactory } from \"./factories\";\nimport { library } from \"./factories\";\n\nfunction saveLibrary(Library) {\n  localStorage.setItem('library', JSON.stringify(Library));\n};\nfunction getLibrary() {\n  let Library = JSON.parse(localStorage.getItem('library'));\n  const todos = Library.todos.map(todo => {\n    let tasks = todo.tasks.map(task => {\n      let { name, dueDate, priority } = task;\n      return taskFactory(name, dueDate, priority);\n    })\n    return projectFactory(todo.name, tasks);\n  })\n  return library(todos);\n}\n\nexport {\n  saveLibrary,\n  getLibrary\n};","import { saveLibrary } from \"./localStorage\";\n\nfunction showPopup() {\n  const addTask = document.getElementById('add-task');\n  addTask.addEventListener('click', (e) => {\n    e.stopPropagation();\n    const task_pop = document.getElementById('task-popup');\n    task_pop.classList.add('task-popup');\n    task_pop.classList.remove('hidden');\n    const taskName = document.getElementById('task-name');\n    taskName.focus();\n  });\n};\nfunction hidePopup() {\n  const cancelT = document.getElementById('cancelT');\n  cancelT.addEventListener('click', () => {\n    const task_pop = document.getElementById('task-popup');\n    task_pop.classList.remove('task-popup');\n    task_pop.classList.add('hidden');\n  });\n};\n\nfunction getDataFromPopup(Library,taskFactory) {\n  const task_pop = document.getElementById('task-popup');\n  task_pop.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const taskName = document.getElementById('task-name');\n    for (let i = 0; i < Library.currentTodo.tasks.length; i++) {\n      if (taskName.value === Library.currentTodo.tasks[i].name) {\n        taskName.setCustomValidity('There is already a task with this name!');\n        taskName.reportValidity();\n        taskName.setCustomValidity(\"\");\n        return;\n      };\n    };\n    const dueDate = document.getElementById('due-date');\n    const priority = document.getElementById('priority');\n    const task = taskFactory(taskName.value,dueDate.value,priority.value);\n    taskName.value = '';\n    dueDate.value = '';\n    const ct = Library.currentTodo;\n    ct.addTask(task);\n    renderTask(ct);\n    task_pop.reset();\n    const cancelT = document.getElementById('cancelT');\n    cancelT.click()\n    // save library updates to local storage.\n    saveLibrary(Library);\n  });\n};\n\nfunction renderTask(project, Library) {\n  if (!project) return;\n  let h1 = document.getElementById('current-project');\n  h1.innerText = project.name;\n  const ul = document.getElementById('tasks');\n  ul.innerHTML = '';\n  project.tasks.forEach(task => {\n    const li = document.createElement('li');\n    const doneButton = document.createElement('button');\n    const nameP = document.createElement('p');\n    const dateP = document.createElement('p');\n    const removeButton = document.createElement('button');\n    li.classList.add('task', task.priority);\n    doneButton.classList.add('done');\n    nameP.classList.add('task-name');\n    dateP.classList.add('date');\n    removeButton.classList.add('remove', 'remove-task');\n    removeButton.innerHTML = '&times'\n    removeButton.addEventListener('click', removeTask(project, Library))\n    nameP.textContent = task.name;\n    dateP.textContent = task.dueDate;\n    doneButton.addEventListener('click', () => {\n      if (task.isDone) {\n        task.isDone = false;\n        li.classList.remove('completed');\n        saveLibrary(Library);\n        return;\n      }\n      task.isDone = true;\n      li.classList.add('completed');\n    });\n    if (task.isDone) {\n      li.classList.add('completed');\n    }\n    li.append(doneButton,nameP,dateP,removeButton);\n    li.dataset.name = task.name;\n    ul.append(li);\n  });\n};\n\nfunction removeTask(project, Library) {\n  return function (e) {\n    const task = e.target.parentElement;\n    project.removeTask(task.dataset.name);\n    task.remove();\n    saveLibrary(Library);\n  };\n};\n\nexport{\n  showPopup,hidePopup,\n  getDataFromPopup,renderTask,removeTask\n};","import { saveLibrary } from \"./localStorage\";\nimport { renderTask } from \"./task\";\n\nfunction showProjectPopup() {\n  const addProject = document.getElementById('add-project');\n  addProject.addEventListener('click', (e) => {\n    e.stopPropagation();\n    const projectPopup = document.getElementById('project-popup');\n    projectPopup.classList.add('project-popup');\n    projectPopup.classList.remove('hidden');\n    const titleInput = document.getElementById('project-title');\n    titleInput.focus();\n  });\n};\nfunction hideProjectPopup() {\n  const cancelP = document.getElementById('cancelP');\n  cancelP.addEventListener('click', () => {\n    const projectPopup = document.getElementById('project-popup');\n    projectPopup.classList.remove('project-popup');\n    projectPopup.classList.add('hidden');\n  });\n};\n// Catch data from this function and make project object and then store in library\nfunction getDataFromProjectForm(Library,projectFactory) {\n  const projectPopup = document.getElementById('project-popup');\n  projectPopup.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const titleInput = document.getElementById('project-title');\n    const projectTitle = titleInput.value;\n    for (let i = 0; i < Library.todos.length; i++) {\n      if (projectTitle === Library.todos[i].name) {\n        titleInput.setCustomValidity('There is already a project with this name!');\n        titleInput.reportValidity();\n        titleInput.setCustomValidity(\"\");\n        return;\n      };\n    };\n    const project = projectFactory(projectTitle);\n    Library.addTodo(project);\n    renderProject(Library, project);\n    titleInput.value = '';\n    projectPopup.reset();\n    const cancelP = document.getElementById('cancelP');\n    cancelP.click();\n    // save library updates to local storage.\n    saveLibrary(Library);\n  });\n};\n// Catch element from this function in renderPage()\nfunction renderProject(Library, project) {\n  const ul = document.getElementById('projects');\n  const li = document.createElement('li');\n  const p = document.createElement('p');\n  const button = document.createElement('button');\n  li.classList.add('project');\n  li.dataset.name = project.name;\n  li.addEventListener('click', () => {\n    Library.currentTodo = project;\n    renderTask(project);\n    const clicked = document.querySelector('.clicked');\n    clicked?.classList.remove('clicked');\n    li.classList.add('clicked');\n  });\n  p.classList.add('project-name');\n  p.textContent = project.name;\n  button.classList.add('remove', 'remove-project');\n  button.innerHTML = '&times';\n  button.addEventListener('click',removeClosure(Library, project));\n  li.append(p,button);\n  ul.append(li);\n};\n\n\nfunction removeClosure(Library, project) {\n  return function removeProject(e) {\n    e.stopPropagation();\n    const button = e.target;\n    const parent = button.parentElement;\n    const projName = parent.dataset.name;\n    Library.removeTodo(projName);\n    parent.remove();\n    if (Library.currentTodo === project) {\n      renderTask(Library.todos[0], Library);\n    }\n    // save library updates to local storage.\n    saveLibrary(Library);\n  };\n};\n\n\n// function renderProjectTasks(project) {\n//   const ul = document.getElementById('tasks');\n//   ul.innerHTML = '';\n//   let i = 0;\n//   project.tasks.forEach(task => {\n//     const li = document.createElement('li');\n//     const doneButton = document.createElement('button');\n//     const nameP = document.createElement('p');\n//     const dateP = document.createElement('p');\n//     const removeButton = document.createElement('button');\n//     li.classList.add('task', task.priority);\n//     doneButton.classList.add('done');\n//     nameP.classList.add('task-name');\n//     dateP.classList.add('date');\n//     removeButton.classList.add('remove', 'remove-task');\n//     removeButton.innerHTML = '&times'\n//     nameP.textContent = task.name;\n//     dateP.textContent = task.dueDate;\n//     doneButton.addEventListener('click', () => {\n//       removeButton.click();\n//     });\n//     li.append(doneButton,nameP,dateP,removeButton);\n//     li.dataset.index = i\n//     i += 1;\n//     ul.append(li);\n//   })\n// };\n\nexport{showProjectPopup,hideProjectPopup,\n        getDataFromProjectForm,renderProject,\n      };","import { library, projectFactory, taskFactory } from \"./factories\";\nimport * as myProject from \"./project\";\nimport * as myTask from \"./task.js\"\nimport { saveLibrary, getLibrary } from \"./localStorage\";\n\nsaveLibrary(library());\nconst Library = getLibrary() || library();\n\nconsole.log('hiiii')\n\nconst defualtProject = projectFactory('Default');\nLibrary.addTodo(defualtProject);\nLibrary.currentTodo = defualtProject;\nmyProject.showProjectPopup();\nmyProject.hideProjectPopup();\nmyProject.getDataFromProjectForm(Library, projectFactory);\nmyTask.showPopup();\nmyTask.hidePopup();\nmyTask.getDataFromPopup(Library, taskFactory);\nLibrary.todos.forEach(project => {\n  myProject.renderProject(Library, project);\n});\nmyTask.renderTask(defualtProject, Library);\ndocument.getElementById('projects').firstChild.click()\n\ndocument.addEventListener('click', (event) => {\n  const task_pop = document.getElementById('task-popup');\n  const projectPopup = document.getElementById('project-popup');\n  if (!task_pop.contains(event.target) && (!task_pop.classList.contains('hidden'))) {\n    task_pop.classList.add('hidden');\n  }\n  if (!projectPopup.contains(event.target)) {\n    projectPopup.classList.add('hidden');\n  }\n})"],"names":["library","todos","currentTodo","addTodo","todo","push","removeTodo","name","i","length","splice","updateCT","index","projectFactory","tasks","addTask","task","removeTask","taskFactory","dueDate","priority","description","isDone","updateDone","done","addDescription","d","saveLibrary","Library","localStorage","setItem","JSON","stringify","renderTask","project","document","getElementById","innerText","ul","innerHTML","forEach","li","createElement","doneButton","nameP","dateP","removeButton","classList","add","addEventListener","e","target","parentElement","dataset","remove","textContent","append","renderProject","p","button","clicked","querySelector","stopPropagation","parent","projName","removeClosure","parse","getItem","map","getLibrary","console","log","defualtProject","projectPopup","focus","preventDefault","titleInput","projectTitle","value","setCustomValidity","reportValidity","reset","click","task_pop","taskName","ct","firstChild","event","contains"],"sourceRoot":""}